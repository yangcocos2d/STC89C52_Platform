C51 COMPILER V9.54   MAIN_001                                                              05/06/2021 23:36:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN_001
OBJECT MODULE PLACED IN .\outHex\main_001.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\main_001.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\74HC573;..\..\BUTTON
                    -;..\..\DS18B20;..\..\exti_interrupt;..\..\IIC;..\..\LCD1602;..\..\motor_encode;..\..\mystring;..\..\pcf8591;..\..\PWM;..
                    -\..\software_timer;..\..\TIMER;..\..\UART) DEBUG OBJECTEXTEND PRINT(.\Listings\main_001.lst) TABS(2) OBJECT(.\outHex\mai
                    -n_001.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include "UART.h"
   3          #include "button.h"
   4          #include "motor_encode.h"
   5          #include "timer.h"
   6          #include "pwm.h"
   7          #include "software_timer.h"
   8          #include "mystring.h"
   9          #include "exti_interrupt.h"
  10          #include "iic.h"
  11          #include "pcf8591.h"
  12          #include "ds18b20.h"
  13           
  14          #define MOTOR_STOP  0
  15          #define MOTOR_RUN   1
  16          #define MOTOR_FORCE_STOP 2
  17          
  18          sbit alarm = P1^4;
  19          sbit test = P1^7;
  20          pwm   motor_pwm = {50,10,0};
  21          static int idata second_counter_data = 0;
  22          unsigned int idata press_01=0,press_02 = 0;
  23          int motor_force_stop_flag = MOTOR_RUN; 
  24          int motor_run_flag = MOTOR_RUN;
  25          unsigned int ds18b20_tempature = 0;
  26          
  27           
  28          enum lcd_pages{start_enum=0,show_motor_speed,show_time,show_press,show_tem,end_enum};
  29          enum lcd_pages lcd_pages_info_display = show_motor_speed;
  30          
  31          char idata lcd_display[2][20];
  32          void lcd_info_update(void *arg)
  33          {
  34   1        int temp = 0;
  35   1        Uart_puts("lcd_info_update\n");
  36   1        str_copy(lcd_display[0],"                ");
  37   1        str_copy(lcd_display[1],"                ");
  38   1        if(lcd_pages_info_display == show_motor_speed)
  39   1        {
  40   2          str_copy(lcd_display[0],"motor speed:");
  41   2          str_copy(lcd_display[1],"speed=   %");
  42   2          str_itoa(&lcd_display[1][6],motor_pwm.pwm_high_percentage);
  43   2          
  44   2        }
  45   1        else if(lcd_pages_info_display == show_time)
  46   1        {
  47   2          
  48   2          str_copy(lcd_display[0],"run time(s):");
  49   2          str_itoa(&lcd_display[1][0],second_counter_data);
  50   2          lcd_display[1][15] = 's';
  51   2          
  52   2        }
C51 COMPILER V9.54   MAIN_001                                                              05/06/2021 23:36:44 PAGE 2   

  53   1        else if(lcd_pages_info_display == show_press)
  54   1        {
  55   2      
  56   2          str_copy(lcd_display[0],"press 1: ");
  57   2          str_copy(lcd_display[1],"press 2: ");
  58   2          str_itoa(&lcd_display[0][10],press_01);
  59   2          str_itoa(&lcd_display[1][10],press_02);
  60   2      
  61   2        }
  62   1        else if(lcd_pages_info_display == show_tem)
  63   1        {
  64   2          unsigned int tem = 0;
  65   2          tem = ds18b20_tempature; 
  66   2          tem = tem/10;
  67   2          str_copy(lcd_display[0],"temperature:  ");
  68   2          str_itoa(&lcd_display[1][0],tem);
  69   2       
  70   2        }
  71   1        
  72   1        
  73   1        LCD_Puts(0,0,lcd_display[0]);
  74   1        LCD_Puts(0,1,lcd_display[1]);
  75   1         
  76   1      
  77   1      }
*** WARNING C280 IN LINE 32 OF ..\main_001.c: 'arg': unreferenced local variable
  78          soft_timer timer_lcd = {0,50,lcd_info_update};
  79          
  80          
  81          #define BUTTON_PRESS_TIME  10
  82          void button_event_deal(void *arg)
  83          {
  84   1        Uart_puts("button_event_deal\n");
  85   1       
  86   1        //在设置速度的页面...
  87   1        if(lcd_pages_info_display == show_motor_speed)
  88   1        {
  89   2          if(BUTTON_LONG_PRESS ==button_get_status(BUTTON_UP,BUTTON_PRESS_TIME))
  90   2          {
  91   3            if(motor_pwm.pwm_high_percentage<100)
  92   3            {
  93   4              motor_pwm.pwm_high_percentage++;
  94   4            }
  95   3            
  96   3          }
  97   2          
  98   2          if(BUTTON_LONG_PRESS ==button_get_status(BUTTON_DOWN,BUTTON_PRESS_TIME))
  99   2          {
 100   3            if(motor_pwm.pwm_high_percentage>0)
 101   3            {
 102   4              motor_pwm.pwm_high_percentage--;
 103   4            }
 104   3            
 105   3          }
 106   2        }
 107   1        
 108   1        //在设置搅拌时间的页面...
 109   1        if(lcd_pages_info_display == show_time)
 110   1        {
 111   2          if(BUTTON_LONG_PRESS ==button_get_status(BUTTON_UP,BUTTON_PRESS_TIME))
 112   2          {
 113   3             second_counter_data+=10;
C51 COMPILER V9.54   MAIN_001                                                              05/06/2021 23:36:44 PAGE 3   

 114   3            
 115   3          }
 116   2          
 117   2          if(BUTTON_LONG_PRESS ==button_get_status(BUTTON_DOWN,BUTTON_PRESS_TIME))
 118   2          {
 119   3             
 120   3            if(second_counter_data>0)
 121   3            {
 122   4              second_counter_data--;
 123   4            }
 124   3          }
 125   2        }
 126   1        
 127   1        //所有页面...
 128   1        if(BUTTON_LONG_PRESS ==button_get_status(BUTTON_ENTER,BUTTON_PRESS_TIME))
 129   1        {    
 130   2            lcd_pages_info_display++;
 131   2            if(lcd_pages_info_display >= end_enum)
 132   2            {
 133   3              lcd_pages_info_display = start_enum + 1;
 134   3            }
 135   2       
 136   2            motor_force_stop_flag = MOTOR_RUN; 
 137   2           
 138   2        }
 139   1        
 140   1        if(BUTTON_LONG_PRESS  ==button_get_status(BUTTON_ESC,BUTTON_PRESS_TIME))
 141   1        {
 142   2            motor_encode_faster_stop();
 143   2            motor_force_stop_flag = MOTOR_FORCE_STOP;
 144   2         
 145   2        }
 146   1      }
*** WARNING C280 IN LINE 82 OF ..\main_001.c: 'arg': unreferenced local variable
 147          soft_timer timer_button = {0,1,button_event_deal};
 148           
 149          void second_counter(void *arg)
 150          {
 151   1        Uart_puts("second_counter\n");
 152   1        second_counter_data++;
 153   1       
 154   1        
 155   1      }
*** WARNING C280 IN LINE 149 OF ..\main_001.c: 'arg': unreferenced local variable
 156          soft_timer timer_minute_counter = {0,100,second_counter};
 157          
 158          void get_ds18b20_tempature(void *arg)
 159          {
 160   1        Uart_puts("get_ds18b20_tempature\n");
 161   1        ds18b20_tempature = ds18b20_get_temp();
 162   1        ds18b20_start_get_temp();
 163   1        
 164   1      }
*** WARNING C280 IN LINE 158 OF ..\main_001.c: 'arg': unreferenced local variable
 165          soft_timer timer_get_ds18b20_tempature = {0,300,get_ds18b20_tempature};
 166          /*
 167          电机管理策略:
 168          press_01:搅拌罐压力
 169          press_02:传送带压力
 170          
 171          搅拌罐压力代表投入物料，传送带压力代表物料破碎成功。
 172          
C51 COMPILER V9.54   MAIN_001                                                              05/06/2021 23:36:44 PAGE 4   

 173          开启电机的时机:
 174          搅拌罐压力增大，代表有物料投放。
 175          关闭电机的时机：
 176          搅拌罐没有压力变化；
 177          或者传送带长时间没有产生压力变化,代表一直没有磨碎的物料流出，这代表搅拌罐堵死了。
 178          
 179          */
 180          void motor_manage(void *arg)
 181          {
 182   1        Uart_puts("motor_manage\n");
 183   1        press_01 =  pcf8591_get_adc_value(PCF8591_SLAVE_ADDRESS_0,0);
 184   1        press_01 =  pcf8591_get_adc_value(PCF8591_SLAVE_ADDRESS_0,1);
 185   1        press_02 =  pcf8591_get_adc_value(PCF8591_SLAVE_ADDRESS_0,0);
 186   1        
 187   1        
 188   1        
 189   1        if( press_01 >= 100)
 190   1        {
 191   2          motor_run_flag = MOTOR_RUN;
 192   2          
 193   2        }
 194   1        else
 195   1        {
 196   2          motor_run_flag = MOTOR_STOP;
 197   2        }
 198   1       
 199   1      }
*** WARNING C280 IN LINE 180 OF ..\main_001.c: 'arg': unreferenced local variable
 200          soft_timer timer_motor_manage = {0,20,motor_manage};
 201          
 202          void timer_Handler()
 203          { 
 204   1        int pwm_status = 0;
 205   1         
 206   1        
 207   1        pwm_stepper(&motor_pwm);
 208   1        pwm_status = pwm_is_high(&motor_pwm);
 209   1      
 210   1        if(motor_force_stop_flag == MOTOR_FORCE_STOP)
 211   1        {
 212   2            motor_encode_faster_stop();
 213   2           alarm = 0;
 214   2        }
 215   1        else
 216   1        {
 217   2          if(motor_run_flag == MOTOR_RUN)
 218   2          {
 219   3            if(pwm_status == 0)
 220   3            {
 221   4              motor_encode_free_stop();
 222   4            }
 223   3            else
 224   3            {
 225   4              motor_encode_clockwise();
 226   4            }
 227   3            alarm = 1;
 228   3          }
 229   2          else
 230   2          {
 231   3             motor_encode_faster_stop();
 232   3             alarm = 0;
 233   3          }
C51 COMPILER V9.54   MAIN_001                                                              05/06/2021 23:36:44 PAGE 5   

 234   2        
 235   2        }
 236   1        
 237   1        
 238   1      
 239   1        soft_timer_stepper(&timer_lcd);
 240   1        soft_timer_stepper(&timer_button);
 241   1        soft_timer_stepper(&timer_minute_counter);
 242   1        soft_timer_stepper(&timer_motor_manage );
 243   1        soft_timer_stepper(&timer_get_ds18b20_tempature );
 244   1      }
 245          
 246          void exti0_Handler()
 247          {
 248   1        
 249   1        //printf("exti0_Handler\n");
 250   1      }
 251          
 252           
 253          void main()
 254          { 
 255   1        Uart_init();
 256   1        LCD_Init();
 257   1        exti_interrupt_set_callback(exti0_Handler);
 258   1        exti_interrupt_init();
 259   1        Timer0_set_callback(timer_Handler);
 260   1        Timer0_Init();
 261   1        motor_encode_enable();
 262   1        motor_encode_faster_stop();
 263   1        
 264   1         
 265   1        while(1)
 266   1        {   
 267   2           
 268   2          soft_timer_check(&timer_lcd,0);
 269   2          soft_timer_check(&timer_button,0);
 270   2          soft_timer_check(&timer_minute_counter,0);
 271   2          soft_timer_check(&timer_motor_manage,0);
 272   2          soft_timer_check(&timer_get_ds18b20_tempature,0);
 273   2       
 274   2          Uart_puts("while 1 loop\n"); 
 275   2        }
 276   1        
 277   1         
 278   1         
 279   1       
 280   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    924    ----
   CONSTANT SIZE    =    192    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      21
   IDATA SIZE       =     46    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
