C51 COMPILER V9.54   MAIN                                                                  05/04/2021 19:09:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\outHex\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\APP\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\LCD1602;..\UART;..\BUTT
                    -ON;..\motor_encode;..\TIMER;..\PWM;..\software_timer;..\mystring;..\DS18B20;..\exti_interrupt;..\IIC;..\pcf8591) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\outHex\main.obj)

line level    source

   1          #include "LCD1602.h"
   2          #include "UART.h"
   3          #include "button.h"
   4          #include "motor_encode.h"
   5          #include "timer.h"
   6          #include "pwm.h"
   7          #include "software_timer.h"
   8          #include "mystring.h"
   9          #include "exti_interrupt.h"
  10          #include "iic.h"
  11          #include "pcf8591.h"
  12          #include "ds18b20.h"
  13           
  14          #define MOTOR_STOP  0
  15          #define MOTOR_RUN   1
  16          #define MOTOR_FORCE_STOP 2
  17          
  18          sbit alarm = P1^4;
  19          sbit key_led = P1^6;
  20          pwm   motor_pwm = {50,10,0};
  21          static int idata second_counter_data = 0;
  22          unsigned int idata press_01=0,press_02 = 0;
  23          int motor_force_stop_flag = MOTOR_RUN; 
  24          int motor_run_flag = MOTOR_RUN;
  25          
  26          void UI_Init()
  27          {
  28   1        LCD_Puts(0,0,"No179410324");
  29   1        LCD_Puts(0,1,"yang hong xian");
  30   1      }
  31          
  32          char idata lcd_display[2][16];
  33          void lcd_display_clear()
  34          {
  35   1        str_copy(lcd_display[0],"                ");
  36   1        str_copy(lcd_display[1],"                ");
  37   1      }
  38          enum lcd_pages{start_enum=0,show_motor_speed,show_time,show_press,show_tem,end_enum};
  39          enum lcd_pages lcd_pages_info_display = show_motor_speed;
  40          
  41          void lcd_info_update(void *arg)
  42          {
  43   1        int temp = 0;
  44   1        Uart_puts("lcd_info_update\n");
  45   1        
  46   1        lcd_display_clear();
  47   1        if(lcd_pages_info_display == show_motor_speed)
  48   1        {
  49   2          str_copy(lcd_display[0],"motor speed:");
  50   2          str_copy(lcd_display[1],"speed=   %");
  51   2          str_itoa(&lcd_display[1][6],motor_pwm.pwm_high_percentage);
  52   2          
  53   2        }
C51 COMPILER V9.54   MAIN                                                                  05/04/2021 19:09:01 PAGE 2   

  54   1        else if(lcd_pages_info_display == show_time)
  55   1        {
  56   2          
  57   2          str_copy(lcd_display[0],"run time(s):");
  58   2          str_itoa(&lcd_display[1][0],second_counter_data);
  59   2          lcd_display[1][15] = 's';
  60   2          
  61   2        }
  62   1        else if(lcd_pages_info_display == show_press)
  63   1        {
  64   2       
  65   2          
  66   2          
  67   2          str_copy(lcd_display[0],"press 1: ");
  68   2          str_copy(lcd_display[1],"press 2: ");
  69   2          str_itoa(&lcd_display[0][10],press_01);
  70   2          str_itoa(&lcd_display[1][10],press_02);
  71   2      
  72   2        }
  73   1        else if(lcd_pages_info_display == show_tem)
  74   1        {
  75   2          unsigned int tem = 0;
  76   2          tem = ds18b20_get_temp();
  77   2          tem = tem/10;
  78   2          str_copy(lcd_display[0],"temperature:  ");
  79   2          str_itoa(&lcd_display[1][0],tem);
  80   2       
  81   2        }
  82   1        
  83   1        
  84   1        LCD_Puts(0,0,lcd_display[0]);
  85   1        LCD_Puts(0,1,lcd_display[1]);
  86   1      }
*** WARNING C280 IN LINE 41 OF ..\APP\main.c: 'arg': unreferenced local variable
  87          soft_timer timer_lcd = {0,20,lcd_info_update};
  88          
  89          
  90          void button_event_deal(void *arg)
  91          {
  92   1       
  93   1        //在设置速度的页面...
  94   1        if(lcd_pages_info_display == show_motor_speed)
  95   1        {
  96   2          if(0 ==button_get_status(BUTTON_UP))
  97   2          {
  98   3            if(motor_pwm.pwm_high_percentage<100)
  99   3            {
 100   4              motor_pwm.pwm_high_percentage++;
 101   4            }
 102   3            
 103   3          }
 104   2          
 105   2          if(0 ==button_get_status(BUTTON_DOWN))
 106   2          {
 107   3            if(motor_pwm.pwm_high_percentage>0)
 108   3            {
 109   4              motor_pwm.pwm_high_percentage--;
 110   4            }
 111   3            
 112   3          }
 113   2        }
 114   1        
C51 COMPILER V9.54   MAIN                                                                  05/04/2021 19:09:01 PAGE 3   

 115   1        //在设置搅拌时间的页面...
 116   1        if(lcd_pages_info_display == show_time)
 117   1        {
 118   2          if(0 ==button_get_status(BUTTON_UP))
 119   2          {
 120   3             second_counter_data+=10;
 121   3            
 122   3          }
 123   2          
 124   2          if(0 ==button_get_status(BUTTON_DOWN))
 125   2          {
 126   3             
 127   3            if(second_counter_data>0)
 128   3            {
 129   4              second_counter_data--;
 130   4            }
 131   3          }
 132   2        }
 133   1        
 134   1        //所有页面...
 135   1        if(0 ==button_get_status(BUTTON_ENTER))
 136   1        {    
 137   2            lcd_pages_info_display++;
 138   2            if(lcd_pages_info_display >= end_enum)
 139   2            {
 140   3              lcd_pages_info_display = start_enum + 1;
 141   3            }
 142   2            motor_force_stop_flag = MOTOR_RUN; 
 143   2        }
 144   1        
 145   1        if(0 ==button_get_status(BUTTON_ESC))
 146   1        {
 147   2            motor_encode_faster_stop();
 148   2            motor_force_stop_flag = MOTOR_FORCE_STOP;
 149   2         
 150   2        }
 151   1      }
*** WARNING C280 IN LINE 90 OF ..\APP\main.c: 'arg': unreferenced local variable
 152          soft_timer timer_button = {0,1,button_event_deal};
 153           
 154          void second_counter(void *arg)
 155          {
 156   1       
 157   1        second_counter_data++;
 158   1       
 159   1        
 160   1      }
*** WARNING C280 IN LINE 154 OF ..\APP\main.c: 'arg': unreferenced local variable
 161          soft_timer timer_minute_counter = {0,100,second_counter};
 162          
 163          
 164          void motor_manage(void *arg)
 165          {
 166   1        press_02 =  pcf8591_get_adc_value(0);
 167   1        press_01 =  pcf8591_get_adc_value(1);
 168   1        
 169   1        if( press_01 >= 100)
 170   1        {
 171   2          motor_run_flag = MOTOR_RUN;
 172   2          
 173   2        }
 174   1        else
C51 COMPILER V9.54   MAIN                                                                  05/04/2021 19:09:01 PAGE 4   

 175   1        {
 176   2          motor_run_flag = MOTOR_STOP;
 177   2        }
 178   1       
 179   1      }
*** WARNING C280 IN LINE 164 OF ..\APP\main.c: 'arg': unreferenced local variable
 180          soft_timer timer_motor_manage = {0,100,motor_manage};
 181          
 182          void timer_Handler()
 183          { 
 184   1        int pwm_status = 0;
 185   1        pwm_stepper(&motor_pwm);
 186   1        pwm_status = pwm_is_high(&motor_pwm);
 187   1        //if(second_counter_data > 0)
 188   1        if(motor_force_stop_flag == MOTOR_FORCE_STOP)
 189   1        {
 190   2            motor_encode_faster_stop();
 191   2           alarm = 0;
 192   2        }
 193   1        else
 194   1        {
 195   2          if(motor_run_flag == MOTOR_RUN)
 196   2          {
 197   3            if(pwm_status == 0)
 198   3            {
 199   4              motor_encode_free_stop();
 200   4            }
 201   3            else
 202   3            {
 203   4              motor_encode_clockwise();
 204   4            }
 205   3            alarm = 1;
 206   3          }
 207   2          else
 208   2          {
 209   3             motor_encode_faster_stop();
 210   3             alarm = 0;
 211   3          }
 212   2        
 213   2        }
 214   1        
 215   1        
 216   1      
 217   1        soft_timer_stepper(&timer_lcd);
 218   1        soft_timer_stepper(&timer_button);
 219   1        soft_timer_stepper(&timer_minute_counter);
 220   1        soft_timer_stepper(&timer_motor_manage );
 221   1      }
 222          
 223          void exti0_Handler()
 224          {
 225   1        
 226   1        //printf("exti0_Handler\n");
 227   1      }
 228          
 229           
 230          void main()
 231          { 
 232   1      
 233   1        Uart_init();
 234   1        LCD_Init();
 235   1        UI_Init();
C51 COMPILER V9.54   MAIN                                                                  05/04/2021 19:09:01 PAGE 5   

 236   1        exti_interrupt_set_callback(exti0_Handler);
 237   1        exti_interrupt_init();
 238   1        Timer0_set_callback(timer_Handler);
 239   1        Timer0_Init();
 240   1        motor_encode_enable();
 241   1        motor_encode_faster_stop();
 242   1        second_counter_data = 10;
 243   1        while(1)
 244   1        {   
 245   2          soft_timer_check(&timer_lcd,0);
 246   2          soft_timer_check(&timer_button,0);
 247   2          soft_timer_check(&timer_minute_counter,0);
 248   2          soft_timer_check(&timer_motor_manage,0);
 249   2        }
 250   1        
 251   1         
 252   1       
 253   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    817    ----
   CONSTANT SIZE    =    133    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39      18
   IDATA SIZE       =     38    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
